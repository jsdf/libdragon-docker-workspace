#!/bin/bash
set -euo pipefail

# this script can be used to start a container running bash, with networking connected to host.
# this is useful to keep a container running for interactive development and connecting from VSCode.

SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
CONTAINER_NAME="libdragon-workspace_current"

PRIMARY_NETWORK_INTERFACE=$(route -n get 0.0.0.0 2>/dev/null | awk '/interface: / {print $2}')
echo "Primary network interface: $PRIMARY_NETWORK_INTERFACE"
HOST_IP=$(ipconfig getifaddr "$PRIMARY_NETWORK_INTERFACE")
echo "Host IP (aliased as 'host'): $HOST_IP"

# - start the container from the libdragon-workspace image
# - run as the current host os user, to avoid permission issues
# - mount the current directory as /workspace in the container
# - set the working directory to /workspace
# - run the container interactively and allocate a pseudo-TTY
# - add an alias for the host machine's IP address (to connect network services to the host)
docker run \
    --name $CONTAINER_NAME \
    --volume "$SCRIPT_DIR:/workspace" \
    --workdir /workspace \
    --interactive \
    --tty \
    --add-host="host:$HOST_IP" \
    libdragon-workspace
